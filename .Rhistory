mat[1]-mat[3]
abs(mat[1]-mat[3])
rm(list=ls())
library("readxl")
library("readxl")
df <- read_excel("c:/work/DS/94-all-deals-dgd_4_R.xls")
head(df)
table(df[2,3])
table(df[,2:3])
table(df[,2:2])
table(df[,3:3])
؟لم
?gl
gl(2,3)
gl(40,10)
gl(9,10)
gl(100,100)
f <-gl(40,10)
f
str(f)
?split
set.seed(1)
rpois(5,2)
?qpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
x
rm(list=ls())
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12)
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
plot(latitude, pm25)
plot(pollution$latitude, pollution$pm25)
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$ppm, col=pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
pwd
getwd()
library("swirl")
swirl()
head(cars)
with(cars, plot(speed, dist))
test(mean(cars$speed), max(cars$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Incomde | region, data = state, c(4,1))
xyplot(Life.Exp ~ Incomde | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab = "red")
boxplot(Ozone~Month, data = airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab = "red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
function-names(par())
names(par())
par()$pin
par("fg")
?pch
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
Type plot(airquality$Wind, type="n",airquality$Ozone)
plot(airquality$Wind, type="n",airquality$Ozone)
title(main = "Wind and Ozone is NYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, airquality$Month == 5)
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone, col="blue", pch=3)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month <> 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=14)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New Yor City", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
exit
quit
library("swirl")
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col="red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple
| Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, c(2,1))
xyplot(y~x|f, layout=c(2,1)
)
v1
v2
myedit("plot1.R")
edit("plot1.R")
myedit("plot1.R")
editor="internal"
myedit("plot1.R")
play
play()
editor = "internal"
nxt()
myedit("plot1.R")
getOption("editor")
options(editor = "internal")
myedit("plot1.R")
source(pathtofile("plot1.R", local=TRUE))
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab=myxlab, ylab=myylab, main=mymain)
library("swirl")
swirl()
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?func
?fun
?rgb
p3 <- colorRampPalette(c("blue", "gree"), alpha = .5.)
p3 <- colorRampPalette(c("blue", "gree"), alpha = .5)
p3 <- colorRampPalette(c("blue", "gree"), alpha = 5)
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y, pch=19, col=rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5, .3))
cols <- brewer.pal(3, "BuGn")
shoMe(cols)
showMe(cols)
pal <- colorRampPalette(cols)
showMe(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
library("swirl")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
exit
library("swirl")
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmobj$iter
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmean(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
library("swirl")
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
play()
editor="internal"
nxt()
myedit("addPatt.R")
play()
options(editor = "internal")
nxt()
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2[,1:2]
svd2[,1]
svd2$d[,1]
svd2[,c(1,2)]
svd2
svd2$v[,1:2]
svd2
svd2$d
dim(faceData)
a1 <- svd1$d %*% sdv1$v
a1 <- svd1$u %*% svd1$d %*% svd1$v
a1 <- svd1$u %*% svd1$d
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2,] %*% svd1$v[,1:2]
a2 <- svd1$u[,1:2] %*% svd1$d[2,] %*% svd1$v[,1:2]
a2 <- svd1$u[,1:2] %*% svd1$d %*% svd1$v[,1:2]
a2 <- svd1$u[,1:2] %*% (svd1$d) * (svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(sdd, subject==1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- sub1[, 1:3]
mdist <- dist(sub1[, 1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562, 563)]))
dim(svd1$u)
maxcon <- which.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(su1[,10:12], maxCon)
mdist <- dist(c(su1[,10:12], maxCon))
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(cbind(sub1[,10:12], maxCon)
)
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-(346:347)], centers = 6)
kClust <- kmeans(sub1, centers = 6)
kClust <- kmeans(sub1[,1:345], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab = "walkdown Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library("swirl")
swirl()
dim(pm0)
head(pm0)
cnames
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(date())
head(dates
)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0 , site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, county.code == 63)
pm0sub <- subset(cnt0, County.Code == 63)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
date0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(median(x0sub, na.rm=TRUE), lwd=2)
abline(median(x0sub, na.rm=TRUE), lwd=2)
info()
abline(median(x0sub), lwd=2)
abline(median(x0sub), 0, lwd=2)
abline(0, median(x0sub), lwd=2)
abline(v=median(x0sub), lwd=2)
abline(h=median(x0sub, na.rm = TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm = TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),, mean=mn0)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0,d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52,), mrg[,2], rep(2,52), mrg[,3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y,]
install.packages("ConvCalendar")
library(ConvCalendar)
spam
str(spam)
library(kernlab)
data(spam)
str(spam[,1:5])
str(spam)
set.seed(3435) trainIndicator = rbinom(4601, size = 1, prob = 0.5) table(trainIndicator)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainIndicator == 0, ]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
hCluster = hclust(dist(t(trainSpam[, 1:57])))
plot(hCluster)
hClusterUpdated = hclust(dist(t(log10(trainSpam[, 1:55] + 1))))
plot(hClusterUpdated)
setwd("c:/work/DS/5-Reproducible-Research/Week2/prj1/")
unzip("./activity.zip", exdir = "./data")
df <- read.csv("./data/activity.csv")
df <- read.csv("./data/activity.csv")
agd <- aggregate(df$steps, by=list(df$date), FUN=sum)
names(agd) <- c("date", "sumsteps")
par(col="red", las=3)
plot(agd$date, agd$sumsteps, type = "l", main = "#steps per day", xlab = "",
ylab = "#steps")
par(col="red", las=3)
plot(agd$sumsteps, type = "l", main = "#steps per day", xlab = "",
ylab = "#steps")
head(agd)
agd <- aggregate(df$steps, by=list(df$interval), FUN=mean, na.rm=TRUE)
names(agd) <- c("interval", "meansteps")
plot(agd$meansteps, type="l", main="Average Daily Activity pattern", xlab="Time", ylab="Steps")
head(agd)
View(agd)
plot(agd$interval, agd$meansteps, type="l", main="Average Daily Activity pattern", xlab="Time", ylab="Steps")
activity <- df
Steps.by.day <- with(activity, aggregate(steps, by=list(date), FUN="sum"))
Steps.by.day <- Steps.by.day[complete.cases(Steps.by.day), ]
hist(Steps.by.day$x, breaks=nrow(Steps.by.day), col="red",
main=("Histogram of Total Number of Steps per Day"),
xlab="Number of Steps per Day")
library("ggplot2")
library(ggplot2)
library(lattice)
getwd()
setwd("c:/work/ds/5-Reproducible-Research/Week2/prj1/RepData_PeerAssessment1/")
